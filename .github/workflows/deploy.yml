name: Terraform Deployment

on:
  push:
    branches:
      - dev
      - staging
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}  # Sets environment to branch name (dev, staging, prod)

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.9

      - name: Configure Azure credentials
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        run: terraform init -backend-config="key=backend.operaterra.${{ github.ref_name }}.tfstate"
        working-directory: ./deployments

      - name: Terraform Workspace Select or Create
        run: terraform workspace select ${{ github.ref_name }} || terraform workspace new ${{ github.ref_name }}
        working-directory: ./deployments

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars.${{ github.ref_name }}"
        working-directory: ./deployments

      - name: Terraform Apply
        if: github.ref_name != 'prod'
        run: terraform apply -auto-approve -var-file="terraform.tfvars.${{ github.ref_name }}"
        working-directory: ./deployments

      - name: Manual Approval for Production
        if: github.ref_name == 'prod'
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: prod-approval-needed

      - name: Terraform Apply (Production)
        if: github.ref_name == 'prod' && github.event.client_payload.action == 'prod-approval-granted'
        run: terraform apply -auto-approve -var-file="terraform.tfvars.prod"
        working-directory: ./deployments
