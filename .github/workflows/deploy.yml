name: Terraform Deploy

on:
  push:
    paths:
      - '**'
  workflow_dispatch:
    inputs:
      action_type:
        description: 'What to do? (apply/destroy)'
        required: true
        default: 'apply'

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./deployments

jobs:
  dev_stage:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create dev
        run: terraform workspace select dev || terraform workspace new dev
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply or destroy dev
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

  stage_prod:
    needs: dev_stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}
        
      - name: Terraform workspace select or create staging
        run: terraform workspace select staging || terraform workspace new staging
        working-directory: ${{ env.WORKING_DIR }}
      
      - name: Terraform apply or destroy staging
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}

  prod:
    needs: stage_prod
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Terraform init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform apply or destroy prod
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}
